SIASL : 
    -will support 13 base instructions; 
    -parsers using flex/bison : 
        - brainfuck like parser 
       
    -command line and file interpreter 





(SIASL)² 1.0: 
    -will support default combined instructions 
    -BF-like parser; decimal number parser; hex parser

(SIASL)² 2.0: 
    
    -will support defining behavior for symbols
    -might support redefining behavior for some existing symbols (oh boy!)


(SIASL²) 1.0 : 


    utf 8 parser might be a lie I dont think i'll do it 
    will focus on bflike parser for now. 

    how will it work : 

    bison will parse n add a token comprised of 2 elements.

    BEFORE being happened to instructions 

        -> translate it to internal stuff; 
        -> put them in order (shortest one first )
        -> check in a table what instructions have to be done for it ?

        -> maybe separate default instructions from other one??

        "+ " eq " +" eq "#+" eq "+#"
    
    have a default op table and a settable table .

default op : 

arithmetics plus : 

+>  curval+=matrix->right->val
+<
+v
+^

similar idea with * , - , / 

++ curval+= matrix->val 
// curval= 1  (curval /=matrix->val but doesnt break if zero) maybe round sqrt???
** curval= curval*curval

>> good question maybe skip to end of current line 
<< beginning? 
v< bottom left? 
>v bottom right ? 
^< so on
vv ?????
^^ ?????


[> , [v ... loop n go this direction at the end of every loop 
[- loop n decrement... ; should be done 


FORMAT for , and . +. is %u, -. %d ... %.3f %c ,...

? : can do different silly stuff 

<? make execution go right to left 
?> execution goes left to right

?+ increments a random cell?  


(,), , # will all be neutral atm (except maybe for print formatting)



need to do the two movement type of stuff ; or maybe not i dont know   

also need to make some wildcard stuff possible; 
then gonna make a release for (SIASL)² alpha n then gonna do a beta version of
it; 

ideas for wildcard: 

?? : operation on a random cell no ? ; will let them be defined  

?> change sense of execution from left to right 
?< change sense of execution from right to left 

to make this possible need to turn the structure of a program into a doubly
linked list or a dynamic array   

?, : makes it that the default number of the * and / operation is the number
entered

?. should be sillier 




need to do stuff for the loops cuz it's not done atm 
  

instructions that provoke valgrind error :

line w syntax error might cause memleaks ; I think I fixed it 
by saying to bison to free stuff correctlyt  

,? instruction causes syntax error which causes invalid read when length 
of string passed is longer than 1 ; might or might not be important? 
this is fixed !!!
